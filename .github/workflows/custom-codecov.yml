name: Custom Code Coverage

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: macos-11

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test
        run: xcodebuild -scheme CITesting -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12,OS=latest' test
      - name: Run tests
        run: swift test --enable-code-coverage -v
      - name: Gather code coverage
        run: xcrun llvm-cov export -format="lcov" .build/debug/{YOUR_PACKAGE_NAME}PackageTests.xctest/Contents/MacOS/{YOUR_PACKAGE_NAME}PackageTests -instr-profile .build/debug/codecov/default.profdata > coverage_report.lcov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./coverage_report.lcov
          verbose: true
      # - name: Convert coverage files
      #   run: |
      #     llvm-cov export -format="lcov" \
      #       .build/debug/hummingbirdPackageTests.xctest \
      #       -ignore-filename-regex="\/Tests\/" \
      #       -instr-profile .build/debug/codecov/default.profdata > info.lcov
      # - name: Setup Xcode
      #   uses: maxim-lobanov/setup-xcode@v1.4.0
      #   with:
      #     xcode-version: "13.1"
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     fail_ci_if_error: fail
      #     files: ./coverage_report.lcov
      #     verbose: true
      - name: Run tests
        run: swift test --enable-code-coverage -v

      - name: Gather code coverage
        run: xcrun llvm-cov export -format="lcov" .build/debug/com.leo.personal.bitrise.CITestingTests.xctest/Contents/MacOS/com.leo.personal.bitrise.CITestingTests -instr-profile .build/debug/codecov/default.profdata > coverage_report.lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./coverage_report.lcov
          verbose: true